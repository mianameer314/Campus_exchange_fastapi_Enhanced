{
  "info": {
    "name": "Campus Exchange API - Chat Endpoints (Fixed)",
    "description": "Complete test collection for chat endpoints with proper authentication",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "room_id",
      "value": "1",
      "type": "string"
    },
    {
      "key": "message_id",
      "value": "1",
      "type": "string"
    },
    {
      "key": "test_user_id",
      "value": "fa23-bai-018",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login to get token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Fixed login test to handle correct response format",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has access token', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('access_token');",
                  "    pm.expect(jsonData.access_token).to.be.a('string');",
                  "    pm.expect(jsonData.access_token.length).to.be.greaterThan(0);",
                  "    ",
                  "    // Store token for subsequent requests",
                  "    pm.collectionVariables.set('access_token', jsonData.access_token);",
                  "});",
                  "",
                  "pm.test('Token type is bearer', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.token_type).to.eql('bearer');",
                  "});",
                  "",
                  "pm.test('Response time is less than 2000ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"fa23-bai-021@cuiatk.edu.pk\",\n  \"password\": \"testpassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login"]
            }
          }
        }
      ]
    },
    {
      "name": "Chat Rooms",
      "item": [
        {
          "name": "Get User Chat Rooms",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});",
                  "",
                  "pm.test('Response time is less than 3000ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(3000);",
                  "});",
                  "",
                  "// Store first room ID if available",
                  "if (pm.response.json().length > 0) {",
                  "    pm.collectionVariables.set('room_id', pm.response.json()[0].id.toString());",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/chat/rooms",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "chat", "rooms"]
            }
          }
        }
      ]
    },
    {
      "name": "Chat Messages",
      "item": [
        {
          "name": "Get Chat Messages",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 404', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    pm.test('Response has messages array', function () {",
                  "        const jsonData = pm.response.json();",
                  "        pm.expect(jsonData).to.have.property('messages');",
                  "        pm.expect(jsonData.messages).to.be.an('array');",
                  "    });",
                  "    ",
                  "    // Store first message ID if available",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.messages && jsonData.messages.length > 0) {",
                  "        pm.collectionVariables.set('message_id', jsonData.messages[0].id.toString());",
                  "    }",
                  "}",
                  "",
                  "pm.test('Response time is less than 3000ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(3000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/chat/rooms/{{room_id}}/messages?page=1&page_size=20",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "chat", "rooms", "{{room_id}}", "messages"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "page_size",
                  "value": "20"
                }
              ]
            }
          }
        },
        {
          "name": "Upload Chat File",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 404', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    pm.test('Response has message data', function () {",
                  "        const jsonData = pm.response.json();",
                  "        pm.expect(jsonData).to.have.property('id');",
                  "        pm.expect(jsonData).to.have.property('file_url');",
                  "    });",
                  "}",
                  "",
                  "pm.test('Response time is less than 5000ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/chat/rooms/{{room_id}}/messages/file",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "chat", "rooms", "{{room_id}}", "messages", "file"]
            }
          }
        }
      ]
    },
    {
      "name": "Message Reactions",
      "item": [
        {
          "name": "Add Message Reaction",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 404', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    pm.test('Response has success message', function () {",
                  "        const jsonData = pm.response.json();",
                  "        pm.expect(jsonData).to.have.property('message');",
                  "    });",
                  "}",
                  "",
                  "pm.test('Response time is less than 2000ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/chat/messages/{{message_id}}/reactions?reaction=👍",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "chat", "messages", "{{message_id}}", "reactions"],
              "query": [
                {
                  "key": "reaction",
                  "value": "👍"
                }
              ]
            }
          }
        },
        {
          "name": "Remove Message Reaction",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 404', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
                  "});",
                  "",
                  "pm.test('Response time is less than 2000ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/chat/messages/{{message_id}}/reactions?reaction=👍",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "chat", "messages", "{{message_id}}", "reactions"],
              "query": [
                {
                  "key": "reaction",
                  "value": "👍"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "User Blocking",
      "item": [
        {
          "name": "Block User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 400 or 404', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 404]);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    pm.test('Response has success message', function () {",
                  "        const jsonData = pm.response.json();",
                  "        pm.expect(jsonData).to.have.property('message');",
                  "    });",
                  "}",
                  "",
                  "pm.test('Response time is less than 2000ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/chat/block/{{test_user_id}}?reason=Spam messages",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "chat", "block", "{{test_user_id}}"],
              "query": [
                {
                  "key": "reason",
                  "value": "Spam messages"
                }
              ]
            }
          }
        },
        {
          "name": "Get Blocked Users",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});",
                  "",
                  "pm.test('Response time is less than 2000ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/chat/blocked",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "chat", "blocked"]
            }
          }
        },
        {
          "name": "Unblock User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 404', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    pm.test('Response has success message', function () {",
                  "        const jsonData = pm.response.json();",
                  "        pm.expect(jsonData).to.have.property('message');",
                  "    });",
                  "}",
                  "",
                  "pm.test('Response time is less than 2000ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/chat/block/{{test_user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "chat", "block", "{{test_user_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "WebSocket Documentation",
      "item": [
        {
          "name": "WebSocket Connection Details",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('WebSocket endpoint documented', function () {",
                  "    // This is just documentation - WebSocket testing requires special tools",
                  "    console.log('WebSocket Endpoint: ws://localhost:8000/api/v1/chat/ws/chat/{listing_id}/{peer_id}');",
                  "    console.log('Authentication: Include access_token as query parameter');",
                  "    console.log('Example: ws://localhost:8000/api/v1/chat/ws/chat/123/fa23-bai-021?token=your_access_token');",
                  "    pm.expect(true).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/docs",
              "host": ["{{base_url}}"],
              "path": ["docs"]
            }
          }
        }
      ]
    }
  ]
}
